; Ackermann関数だそうだ
(define (A x y)
    (cond ((= y 0) 0)
          ((= x 0) (* 2 y))
          ((= y 1) 2)
          (else (A (- x 1)
                   (A x (- y 1))))))

(print (A 1 10))
;   1024
;   (A 0
;       (A 1 9))
;       (A 0
;           (A 1 8))
;           (A 0
;               (A 1 7))
;               (A 0
;                   (A 1 6))
;                   (A 0
;                       (A 1 5))
;                       (A 0
;                           (A 1 4))
;                           (A 0
;                               (A 1 3))
;                               (A 0
;                                   (A 1 2))
;                                   (A 0
;                                       (A 1 1))
;                                       2
;                                   4
;                               8
;                           16
;                       32
;                   64
;               128
;           256
;       512
;   1024
;

(print (A 2 4))
;   65536
;   (A 1
;       (A 2 3))
;       (A 1
;           (A 2 2))
;           (A 0
;               (A 2 1))
;               2
;           4
;       (A 0
;           (A 1 3))
;           (A 0
;               (A 1 2))
;               (A 0
;                   (A 1 1))
;                   2
;               4
;           8
;       16
;   (A 0
;       (A 1 15))
;       (A 0
;           (A 1 14)
;           ...
;   65536
;   反復かつ再帰！！！１１１
;

(define (f n) (A 0 n))
(define (g n) (A 1 n))
(define (h n) (A 2 n))
(define (k n) (* 5 n n))

; (f n) => 2*n
; (g n) => 2^n
; (h n) => 2^(2^(2^(n-2)) (n>=2)
